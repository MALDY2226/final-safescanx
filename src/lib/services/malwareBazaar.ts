import { supabase } from '../supabase';

interface MalwareBazaarResponse {
  query_status: string;
  data: {
    sha256_hash: string;
    file_name: string;
    signature: string;
    threat_level: number;
  }[];
}

export async function checkMalwareBazaar(hash: string): Promise<{
  isMatch: boolean;
  threat?: {
    name: string;
    signature: string;
    threatLevel: number;
  };
}> {
  try {
    const response = await fetch(`${import.meta.env.VITE_SUPABASE_URL}/functions/v1/malware-check`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${import.meta.env.VITE_SUPABASE_ANON_KEY}`
      },
      body: JSON.stringify({ hash })
    });

    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }

    const { malwareBazaar } = await response.json();

    if (malwareBazaar.query_status === 'ok' && malwareBazaar.data.length > 0) {
      const match = malwareBazaar.data[0];
      return {
        isMatch: true,
        threat: {
          name: match.file_name,
          signature: match.signature,
          threatLevel: match.threat_level
        }
      };
    }

    return { isMatch: false };
  } catch (error) {
    console.error('MalwareBazaar API error:', error);
    return { isMatch: false };
  }
}